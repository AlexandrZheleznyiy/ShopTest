// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShopTest.Context;

#nullable disable

namespace ShopTest.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240223091459_AddClient")]
    partial class AddClient
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShopTest.Entity.BreadDep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Count")
                        .HasColumnType("integer");

                    b.Property<int?>("Department_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name_Prod")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<int?>("ProductStore_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Department_Id");

                    b.HasIndex("ProductStore_Id");

                    b.ToTable("Bread");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Count = 1,
                            Department_Id = 4,
                            Name_Prod = "Ржаной",
                            Price = 40m,
                            ProductStore_Id = 1
                        },
                        new
                        {
                            Id = 2,
                            Count = 1,
                            Department_Id = 4,
                            Name_Prod = "Белый",
                            Price = 50m,
                            ProductStore_Id = 1
                        },
                        new
                        {
                            Id = 3,
                            Count = 1,
                            Department_Id = 4,
                            Name_Prod = "Бездрожжевой",
                            Price = 80m,
                            ProductStore_Id = 1
                        },
                        new
                        {
                            Id = 4,
                            Count = 1,
                            Department_Id = 4,
                            Name_Prod = "Белковый",
                            Price = 90m,
                            ProductStore_Id = 1
                        },
                        new
                        {
                            Id = 5,
                            Count = 1,
                            Department_Id = 4,
                            Name_Prod = "Лаваш",
                            Price = 40m,
                            ProductStore_Id = 1
                        });
                });

            modelBuilder.Entity("ShopTest.Entity.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientName")
                        .HasColumnType("text");

                    b.Property<int?>("CountProd")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ShopTest.Entity.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name_Department")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("ProductStore_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductStore_Id");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name_Department = "Мясной",
                            ProductStore_Id = 1
                        },
                        new
                        {
                            Id = 2,
                            Name_Department = "Рыбный",
                            ProductStore_Id = 1
                        },
                        new
                        {
                            Id = 3,
                            Name_Department = "Молочный",
                            ProductStore_Id = 1
                        },
                        new
                        {
                            Id = 4,
                            Name_Department = "Хлебный",
                            ProductStore_Id = 1
                        });
                });

            modelBuilder.Entity("ShopTest.Entity.FishDep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Department_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name_Prod")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<int?>("ProductStore_Id")
                        .HasColumnType("integer");

                    b.Property<double?>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("Department_Id");

                    b.HasIndex("ProductStore_Id");

                    b.ToTable("Fish");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department_Id = 2,
                            Name_Prod = "Осетр",
                            Price = 300m,
                            ProductStore_Id = 1,
                            Weight = 1.0
                        },
                        new
                        {
                            Id = 2,
                            Department_Id = 2,
                            Name_Prod = "Карась",
                            Price = 200m,
                            ProductStore_Id = 1,
                            Weight = 1.0
                        },
                        new
                        {
                            Id = 3,
                            Department_Id = 2,
                            Name_Prod = "Щука",
                            Price = 150m,
                            ProductStore_Id = 1,
                            Weight = 1.0
                        },
                        new
                        {
                            Id = 4,
                            Department_Id = 2,
                            Name_Prod = "Килька",
                            Price = 100m,
                            ProductStore_Id = 1,
                            Weight = 1.0
                        },
                        new
                        {
                            Id = 5,
                            Department_Id = 2,
                            Name_Prod = "Сельдь",
                            Price = 400m,
                            ProductStore_Id = 1,
                            Weight = 1.0
                        });
                });

            modelBuilder.Entity("ShopTest.Entity.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(18);

                    b.Property<int?>("Department_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("ProductStore_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Department_Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.HasIndex("ProductStore_Id");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("ShopTest.Entity.MeatDep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Department_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name_Prod")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<int?>("ProductStore_Id")
                        .HasColumnType("integer");

                    b.Property<double?>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("Department_Id");

                    b.HasIndex("ProductStore_Id");

                    b.ToTable("Meat");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department_Id = 1,
                            Name_Prod = "Говядина",
                            Price = 800m,
                            ProductStore_Id = 1,
                            Weight = 1.0
                        },
                        new
                        {
                            Id = 2,
                            Department_Id = 1,
                            Name_Prod = "Курица",
                            Price = 500m,
                            ProductStore_Id = 1,
                            Weight = 1.0
                        },
                        new
                        {
                            Id = 3,
                            Department_Id = 1,
                            Name_Prod = "Индейка",
                            Price = 400m,
                            ProductStore_Id = 1,
                            Weight = 1.0
                        },
                        new
                        {
                            Id = 4,
                            Department_Id = 1,
                            Name_Prod = "Свинина",
                            Price = 900m,
                            ProductStore_Id = 1,
                            Weight = 1.0
                        },
                        new
                        {
                            Id = 5,
                            Department_Id = 1,
                            Name_Prod = "Утка",
                            Price = 300m,
                            ProductStore_Id = 1,
                            Weight = 1.0
                        });
                });

            modelBuilder.Entity("ShopTest.Entity.MilkDep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Count")
                        .HasColumnType("integer");

                    b.Property<int?>("Department_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name_Prod")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<int?>("ProductStore_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Department_Id");

                    b.HasIndex("ProductStore_Id");

                    b.ToTable("Milk");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Count = 1,
                            Department_Id = 3,
                            Name_Prod = "Коровье",
                            Price = 80m,
                            ProductStore_Id = 1
                        },
                        new
                        {
                            Id = 2,
                            Count = 1,
                            Department_Id = 3,
                            Name_Prod = "Козье",
                            Price = 90m,
                            ProductStore_Id = 1
                        },
                        new
                        {
                            Id = 3,
                            Count = 1,
                            Department_Id = 3,
                            Name_Prod = "Оленье",
                            Price = 150m,
                            ProductStore_Id = 1
                        },
                        new
                        {
                            Id = 4,
                            Count = 1,
                            Department_Id = 3,
                            Name_Prod = "Кобылье",
                            Price = 150m,
                            ProductStore_Id = 1
                        },
                        new
                        {
                            Id = 5,
                            Count = 1,
                            Department_Id = 3,
                            Name_Prod = "Кролика",
                            Price = 100m,
                            ProductStore_Id = 1
                        });
                });

            modelBuilder.Entity("ShopTest.Entity.ProductStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address_Store")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Email_Store")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name_Store")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Phone_Store")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email_Store")
                        .IsUnique();

                    b.HasIndex("Phone_Store")
                        .IsUnique();

                    b.ToTable("Store");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address_Store = "Москва",
                            Email_Store = "prod@mail.ru",
                            Name_Store = "ПродуктЗБС",
                            Phone_Store = "984"
                        });
                });

            modelBuilder.Entity("ShopTest.Entity.BreadDep", b =>
                {
                    b.HasOne("ShopTest.Entity.Department", "Department")
                        .WithMany("Breads")
                        .HasForeignKey("Department_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ShopTest.Entity.ProductStore", "ProductStore")
                        .WithMany("Breads")
                        .HasForeignKey("ProductStore_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Department");

                    b.Navigation("ProductStore");
                });

            modelBuilder.Entity("ShopTest.Entity.Department", b =>
                {
                    b.HasOne("ShopTest.Entity.ProductStore", "ProductStore")
                        .WithMany("Departments")
                        .HasForeignKey("ProductStore_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ProductStore");
                });

            modelBuilder.Entity("ShopTest.Entity.FishDep", b =>
                {
                    b.HasOne("ShopTest.Entity.Department", "Department")
                        .WithMany("Fish")
                        .HasForeignKey("Department_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ShopTest.Entity.ProductStore", "ProductStore")
                        .WithMany("Fish")
                        .HasForeignKey("ProductStore_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Department");

                    b.Navigation("ProductStore");
                });

            modelBuilder.Entity("ShopTest.Entity.Manager", b =>
                {
                    b.HasOne("ShopTest.Entity.Department", "Department")
                        .WithMany("Managers")
                        .HasForeignKey("Department_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ShopTest.Entity.ProductStore", "ProductStore")
                        .WithMany("Managers")
                        .HasForeignKey("ProductStore_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Department");

                    b.Navigation("ProductStore");
                });

            modelBuilder.Entity("ShopTest.Entity.MeatDep", b =>
                {
                    b.HasOne("ShopTest.Entity.Department", "Department")
                        .WithMany("Meat")
                        .HasForeignKey("Department_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ShopTest.Entity.ProductStore", "ProductStore")
                        .WithMany("Meat")
                        .HasForeignKey("ProductStore_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Department");

                    b.Navigation("ProductStore");
                });

            modelBuilder.Entity("ShopTest.Entity.MilkDep", b =>
                {
                    b.HasOne("ShopTest.Entity.Department", "Department")
                        .WithMany("Milk")
                        .HasForeignKey("Department_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ShopTest.Entity.ProductStore", "ProductStore")
                        .WithMany("Milk")
                        .HasForeignKey("ProductStore_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Department");

                    b.Navigation("ProductStore");
                });

            modelBuilder.Entity("ShopTest.Entity.Department", b =>
                {
                    b.Navigation("Breads");

                    b.Navigation("Fish");

                    b.Navigation("Managers");

                    b.Navigation("Meat");

                    b.Navigation("Milk");
                });

            modelBuilder.Entity("ShopTest.Entity.ProductStore", b =>
                {
                    b.Navigation("Breads");

                    b.Navigation("Departments");

                    b.Navigation("Fish");

                    b.Navigation("Managers");

                    b.Navigation("Meat");

                    b.Navigation("Milk");
                });
#pragma warning restore 612, 618
        }
    }
}
